/*
 * This file is generated by jOOQ.
 */
package com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.daos


import java.time.LocalDateTime
import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl
import org.springframework.stereotype.Repository


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
@Repository
open class OutboxEventDao(configuration: Configuration?) : DAOImpl<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.records.OutboxEventRecord, com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent, UUID>(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT, com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent::class.java, configuration) {

    /**
     * Create a new OutboxEventDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent): UUID = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: UUID, upperInclusive: UUID): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetchRange(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: UUID): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetch(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.ID, *values)

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: UUID): com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent? = fetchOne(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.ID, value)

    /**
     * Fetch records that have <code>event_type_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfEventTypeId(lowerInclusive: UUID, upperInclusive: UUID): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetchRange(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.EVENT_TYPE_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>event_type_id IN (values)</code>
     */
    fun fetchByEventTypeId(vararg values: UUID): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetch(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.EVENT_TYPE_ID, *values)

    /**
     * Fetch records that have <code>event_status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfEventStatus(lowerInclusive: String, upperInclusive: String): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetchRange(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.EVENT_STATUS, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>event_status IN (values)</code>
     */
    fun fetchByEventStatus(vararg values: String): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetch(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.EVENT_STATUS, *values)

    /**
     * Fetch records that have <code>source_user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfSourceUserId(lowerInclusive: String?, upperInclusive: String?): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetchRange(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.SOURCE_USER_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>source_user_id IN (values)</code>
     */
    fun fetchBySourceUserId(vararg values: String): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetch(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.SOURCE_USER_ID, *values)

    /**
     * Fetch records that have <code>source_event_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfSourceEventId(lowerInclusive: String, upperInclusive: String): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetchRange(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.SOURCE_EVENT_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>source_event_id IN (values)</code>
     */
    fun fetchBySourceEventId(vararg values: String): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetch(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.SOURCE_EVENT_ID, *values)

    /**
     * Fetch records that have <code>source_payload BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfSourcePayload(lowerInclusive: String, upperInclusive: String): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetchRange(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.SOURCE_PAYLOAD, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>source_payload IN (values)</code>
     */
    fun fetchBySourcePayload(vararg values: String): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetch(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.SOURCE_PAYLOAD, *values)

    /**
     * Fetch records that have <code>process_group_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfProcessGroupId(lowerInclusive: UUID?, upperInclusive: UUID?): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetchRange(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.PROCESS_GROUP_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>process_group_id IN (values)</code>
     */
    fun fetchByProcessGroupId(vararg values: UUID): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetch(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.PROCESS_GROUP_ID, *values)

    /**
     * Fetch records that have <code>processed_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfProcessedOn(lowerInclusive: LocalDateTime?, upperInclusive: LocalDateTime?): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetchRange(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.PROCESSED_ON, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>processed_on IN (values)</code>
     */
    fun fetchByProcessedOn(vararg values: LocalDateTime): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetch(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.PROCESSED_ON, *values)

    /**
     * Fetch records that have <code>processed_error BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfProcessedError(lowerInclusive: String?, upperInclusive: String?): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetchRange(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.PROCESSED_ERROR, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>processed_error IN (values)</code>
     */
    fun fetchByProcessedError(vararg values: String): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetch(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.PROCESSED_ERROR, *values)

    /**
     * Fetch records that have <code>row_version BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfRowVersion(lowerInclusive: Int?, upperInclusive: Int?): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetchRange(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.ROW_VERSION, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>row_version IN (values)</code>
     */
    fun fetchByRowVersion(vararg values: Int): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetch(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.ROW_VERSION, *values.toTypedArray())

    /**
     * Fetch records that have <code>row_created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfRowCreatedBy(lowerInclusive: String, upperInclusive: String): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetchRange(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.ROW_CREATED_BY, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>row_created_by IN (values)</code>
     */
    fun fetchByRowCreatedBy(vararg values: String): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetch(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.ROW_CREATED_BY, *values)

    /**
     * Fetch records that have <code>row_created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfRowCreatedOn(lowerInclusive: LocalDateTime?, upperInclusive: LocalDateTime?): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetchRange(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.ROW_CREATED_ON, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>row_created_on IN (values)</code>
     */
    fun fetchByRowCreatedOn(vararg values: LocalDateTime): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetch(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.ROW_CREATED_ON, *values)

    /**
     * Fetch records that have <code>row_updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfRowUpdatedBy(lowerInclusive: String?, upperInclusive: String?): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetchRange(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.ROW_UPDATED_BY, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>row_updated_by IN (values)</code>
     */
    fun fetchByRowUpdatedBy(vararg values: String): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetch(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.ROW_UPDATED_BY, *values)

    /**
     * Fetch records that have <code>row_updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfRowUpdatedOn(lowerInclusive: LocalDateTime?, upperInclusive: LocalDateTime?): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetchRange(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.ROW_UPDATED_ON, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>row_updated_on IN (values)</code>
     */
    fun fetchByRowUpdatedOn(vararg values: LocalDateTime): List<com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxEvent> = fetch(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxEvent.OUTBOX_EVENT.ROW_UPDATED_ON, *values)
}
