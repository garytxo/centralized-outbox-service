/*
 * This file is generated by jOOQ.
 */
package com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.records


import com.murray.outbox.infrastructure.out.persistence.jooq.audit.JooqAuditableAwareRecord

import java.time.LocalDateTime
import java.util.UUID

import org.jooq.Field
import org.jooq.JSONB
import org.jooq.Record1
import org.jooq.Record11
import org.jooq.Row11
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class OutboxDomainEventRecord private constructor() : UpdatableRecordImpl<OutboxDomainEventRecord>(com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxDomainEvent.OUTBOX_DOMAIN_EVENT), JooqAuditableAwareRecord, Record11<UUID?, String?, String?, String?, JSONB?, LocalDateTime?, Int?, String?, LocalDateTime?, String?, LocalDateTime?>, com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.interfaces.IOutboxDomainEvent {

    open override var id: UUID
        set(value): Unit = set(0, value)
        get(): UUID = get(0) as UUID

    open override var eventType: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open override var aggregateId: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    open override var aggregateType: String
        set(value): Unit = set(3, value)
        get(): String = get(3) as String

    open override var eventData: JSONB
        set(value): Unit = set(4, value)
        get(): JSONB = get(4) as JSONB

    open override var happenedOn: LocalDateTime?
        set(value): Unit = set(5, value)
        get(): LocalDateTime? = get(5) as LocalDateTime?

    open override var rowVersion: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    open override var rowCreatedBy: String
        set(value): Unit = set(7, value)
        get(): String = get(7) as String

    open override var rowCreatedOn: LocalDateTime?
        set(value): Unit = set(8, value)
        get(): LocalDateTime? = get(8) as LocalDateTime?

    open override var rowUpdatedBy: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open override var rowUpdatedOn: LocalDateTime?
        set(value): Unit = set(10, value)
        get(): LocalDateTime? = get(10) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row11<UUID?, String?, String?, String?, JSONB?, LocalDateTime?, Int?, String?, LocalDateTime?, String?, LocalDateTime?> = super.fieldsRow() as Row11<UUID?, String?, String?, String?, JSONB?, LocalDateTime?, Int?, String?, LocalDateTime?, String?, LocalDateTime?>
    override fun valuesRow(): Row11<UUID?, String?, String?, String?, JSONB?, LocalDateTime?, Int?, String?, LocalDateTime?, String?, LocalDateTime?> = super.valuesRow() as Row11<UUID?, String?, String?, String?, JSONB?, LocalDateTime?, Int?, String?, LocalDateTime?, String?, LocalDateTime?>
    override fun field1(): Field<UUID?> = com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxDomainEvent.OUTBOX_DOMAIN_EVENT.ID
    override fun field2(): Field<String?> = com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxDomainEvent.OUTBOX_DOMAIN_EVENT.EVENT_TYPE
    override fun field3(): Field<String?> = com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxDomainEvent.OUTBOX_DOMAIN_EVENT.AGGREGATE_ID
    override fun field4(): Field<String?> = com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxDomainEvent.OUTBOX_DOMAIN_EVENT.AGGREGATE_TYPE
    override fun field5(): Field<JSONB?> = com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxDomainEvent.OUTBOX_DOMAIN_EVENT.EVENT_DATA
    override fun field6(): Field<LocalDateTime?> = com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxDomainEvent.OUTBOX_DOMAIN_EVENT.HAPPENED_ON
    override fun field7(): Field<Int?> = com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxDomainEvent.OUTBOX_DOMAIN_EVENT.ROW_VERSION
    override fun field8(): Field<String?> = com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxDomainEvent.OUTBOX_DOMAIN_EVENT.ROW_CREATED_BY
    override fun field9(): Field<LocalDateTime?> = com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxDomainEvent.OUTBOX_DOMAIN_EVENT.ROW_CREATED_ON
    override fun field10(): Field<String?> = com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxDomainEvent.OUTBOX_DOMAIN_EVENT.ROW_UPDATED_BY
    override fun field11(): Field<LocalDateTime?> = com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.OutboxDomainEvent.OUTBOX_DOMAIN_EVENT.ROW_UPDATED_ON
    override fun component1(): UUID = id
    override fun component2(): String = eventType
    override fun component3(): String = aggregateId
    override fun component4(): String = aggregateType
    override fun component5(): JSONB = eventData
    override fun component6(): LocalDateTime? = happenedOn
    override fun component7(): Int? = rowVersion
    override fun component8(): String = rowCreatedBy
    override fun component9(): LocalDateTime? = rowCreatedOn
    override fun component10(): String? = rowUpdatedBy
    override fun component11(): LocalDateTime? = rowUpdatedOn
    override fun value1(): UUID = id
    override fun value2(): String = eventType
    override fun value3(): String = aggregateId
    override fun value4(): String = aggregateType
    override fun value5(): JSONB = eventData
    override fun value6(): LocalDateTime? = happenedOn
    override fun value7(): Int? = rowVersion
    override fun value8(): String = rowCreatedBy
    override fun value9(): LocalDateTime? = rowCreatedOn
    override fun value10(): String? = rowUpdatedBy
    override fun value11(): LocalDateTime? = rowUpdatedOn

    override fun value1(value: UUID?): OutboxDomainEventRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): OutboxDomainEventRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): OutboxDomainEventRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): OutboxDomainEventRecord {
        set(3, value)
        return this
    }

    override fun value5(value: JSONB?): OutboxDomainEventRecord {
        set(4, value)
        return this
    }

    override fun value6(value: LocalDateTime?): OutboxDomainEventRecord {
        set(5, value)
        return this
    }

    override fun value7(value: Int?): OutboxDomainEventRecord {
        set(6, value)
        return this
    }

    override fun value8(value: String?): OutboxDomainEventRecord {
        set(7, value)
        return this
    }

    override fun value9(value: LocalDateTime?): OutboxDomainEventRecord {
        set(8, value)
        return this
    }

    override fun value10(value: String?): OutboxDomainEventRecord {
        set(9, value)
        return this
    }

    override fun value11(value: LocalDateTime?): OutboxDomainEventRecord {
        set(10, value)
        return this
    }

    override fun values(value1: UUID?, value2: String?, value3: String?, value4: String?, value5: JSONB?, value6: LocalDateTime?, value7: Int?, value8: String?, value9: LocalDateTime?, value10: String?, value11: LocalDateTime?): OutboxDomainEventRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        return this
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    override fun from(from: com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.interfaces.IOutboxDomainEvent) {
        id = from.id
        eventType = from.eventType
        aggregateId = from.aggregateId
        aggregateType = from.aggregateType
        eventData = from.eventData
        happenedOn = from.happenedOn
        rowVersion = from.rowVersion
        rowCreatedBy = from.rowCreatedBy
        rowCreatedOn = from.rowCreatedOn
        rowUpdatedBy = from.rowUpdatedBy
        rowUpdatedOn = from.rowUpdatedOn
        resetChangedOnNotNull()
    }

    override fun <E : com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.interfaces.IOutboxDomainEvent> into(into: E): E {
        into.from(this)
        return into
    }

    /**
     * Create a detached, initialised OutboxDomainEventRecord
     */
    constructor(id: UUID, eventType: String, aggregateId: String, aggregateType: String, eventData: JSONB, happenedOn: LocalDateTime? = null, rowVersion: Int? = null, rowCreatedBy: String, rowCreatedOn: LocalDateTime? = null, rowUpdatedBy: String? = null, rowUpdatedOn: LocalDateTime? = null): this() {
        this.id = id
        this.eventType = eventType
        this.aggregateId = aggregateId
        this.aggregateType = aggregateType
        this.eventData = eventData
        this.happenedOn = happenedOn
        this.rowVersion = rowVersion
        this.rowCreatedBy = rowCreatedBy
        this.rowCreatedOn = rowCreatedOn
        this.rowUpdatedBy = rowUpdatedBy
        this.rowUpdatedOn = rowUpdatedOn
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised OutboxDomainEventRecord
     */
    constructor(value: com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos.OutboxDomainEvent?): this() {
        if (value != null) {
            this.id = value.id
            this.eventType = value.eventType
            this.aggregateId = value.aggregateId
            this.aggregateType = value.aggregateType
            this.eventData = value.eventData
            this.happenedOn = value.happenedOn
            this.rowVersion = value.rowVersion
            this.rowCreatedBy = value.rowCreatedBy
            this.rowCreatedOn = value.rowCreatedOn
            this.rowUpdatedBy = value.rowUpdatedBy
            this.rowUpdatedOn = value.rowUpdatedOn
            resetChangedOnNotNull()
        }
    }
}
