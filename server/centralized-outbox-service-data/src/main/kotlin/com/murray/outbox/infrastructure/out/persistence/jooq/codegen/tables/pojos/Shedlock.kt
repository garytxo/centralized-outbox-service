/*
 * This file is generated by jOOQ.
 */
package com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.pojos


import java.time.LocalDateTime


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class Shedlock(
    override var name: String,
    override var lockUntil: LocalDateTime,
    override var lockedAt: LocalDateTime,
    override var lockedBy: String
): com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.interfaces.IShedlock {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Shedlock = other as Shedlock
        if (this.name != o.name)
            return false
        if (this.lockUntil != o.lockUntil)
            return false
        if (this.lockedAt != o.lockedAt)
            return false
        if (this.lockedBy != o.lockedBy)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.name.hashCode()
        result = prime * result + this.lockUntil.hashCode()
        result = prime * result + this.lockedAt.hashCode()
        result = prime * result + this.lockedBy.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Shedlock (")

        sb.append(name)
        sb.append(", ").append(lockUntil)
        sb.append(", ").append(lockedAt)
        sb.append(", ").append(lockedBy)

        sb.append(")")
        return sb.toString()
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    override fun from(from: com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.interfaces.IShedlock) {
        name = from.name
        lockUntil = from.lockUntil
        lockedAt = from.lockedAt
        lockedBy = from.lockedBy
    }

    override fun <E : com.murray.outbox.infrastructure.`out`.persistence.jooq.codegen.tables.interfaces.IShedlock> into(into: E): E {
        into.from(this)
        return into
    }
}
